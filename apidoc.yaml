openapi: 3.0.3
info:
  title: Synapsis.id Challange API Documentation
  description: Synapsis.id Challange API Documentation
  version: 1.0.0
  contact:
    name: 'Arya Yunanta'
    email: 'aryayun90@gmail.com'
    url: 'github.com/aryahmph'
servers:
  - url: 'http://localhost:4001/api/v1'
paths:
  /auth:
    post:
      tags:
        - User
      summary: 'User Login'
      requestBody:
        content:
          'application/json':
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: 'Success login'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: string
                    description: 'JWT access token'
                    nullable: false
  /users:
    post:
      tags:
        - User
      summary: 'Create user'
      requestBody:
        content:
          'application/json':
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                address:
                  type: string
              required:
                - email
                - password
                - name
                - address
      responses:
        '200':
          description: 'Success create user'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: integer
                    description: 'Created user id'
                    nullable: false

  /users/carts:
    get:
      tags:
        - User
        - Cart Item
      summary: 'List of cart item by user'
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 'Success'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CartItem'

  /products:
    get:
      tags:
        - Product
      summary: 'List products'
      parameters:
        - name: 'category'
          description: 'Filter by category'
          in: query
          required: false
      responses:
        '200':
          description: 'Success'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'

  /cart-items:
    post:
      tags:
        - Cart Item
      summary: 'Add product to shopping cart'
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: 'Success'
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: integer
                    description: 'Created cart item id'
                    nullable: false

components:
  schemas:
    'Product':
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        description:
          type: string
        category:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    'CartItem':
      type: object
      properties:
        id:
          type: integer
        product:
          items:
            $ref: '#/components/schemas/Product'
        quantity:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
  securitySchemes:
    'bearerAuth':
      type: 'http'
      scheme: 'bearer'
      bearerFormat: 'JWT'