// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0

package sqlc

import (
	"fmt"
	"time"
)

type OrderStatus string

const (
	OrderStatusPending    OrderStatus = "Pending"
	OrderStatusProcessing OrderStatus = "Processing"
	OrderStatusShipped    OrderStatus = "Shipped"
	OrderStatusDelivered  OrderStatus = "Delivered"
	OrderStatusExpired    OrderStatus = "Expired"
)

func (e *OrderStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OrderStatus(s)
	case string:
		*e = OrderStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for OrderStatus: %T", src)
	}
	return nil
}

type PaymentStatus string

const (
	PaymentStatusPending   PaymentStatus = "Pending"
	PaymentStatusCompleted PaymentStatus = "Completed"
	PaymentStatusExpired   PaymentStatus = "Expired"
)

func (e *PaymentStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PaymentStatus(s)
	case string:
		*e = PaymentStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PaymentStatus: %T", src)
	}
	return nil
}

type CartItem struct {
	ID        int32     `db:"id"`
	ProductID int32     `db:"product_id"`
	UserID    int32     `db:"user_id"`
	Quantity  int32     `db:"quantity"`
	CreatedAt time.Time `db:"created_at"`
	UpdatedAt time.Time `db:"updated_at"`
}

type Order struct {
	ID        int32       `db:"id"`
	UserID    int32       `db:"user_id"`
	PaymentID string      `db:"payment_id"`
	Status    OrderStatus `db:"status"`
	CreatedAt time.Time   `db:"created_at"`
	UpdatedAt time.Time   `db:"updated_at"`
}

type OrderItem struct {
	ID        int32     `db:"id"`
	OrderID   int32     `db:"order_id"`
	ProductID int32     `db:"product_id"`
	Quantity  int32     `db:"quantity"`
	CreatedAt time.Time `db:"created_at"`
	UpdatedAt time.Time `db:"updated_at"`
}

type Payment struct {
	ID        string        `db:"id"`
	UserID    int32         `db:"user_id"`
	VaNumber  string        `db:"va_number"`
	Amount    float64       `db:"amount"`
	Status    PaymentStatus `db:"status"`
	CreatedAt time.Time     `db:"created_at"`
	UpdatedAt time.Time     `db:"updated_at"`
}

type Product struct {
	ID          int32     `db:"id"`
	Name        string    `db:"name"`
	Price       float64   `db:"price"`
	Description string    `db:"description"`
	Category    string    `db:"category"`
	CreatedAt   time.Time `db:"created_at"`
	UpdatedAt   time.Time `db:"updated_at"`
}

type User struct {
	ID           int32     `db:"id"`
	Email        string    `db:"email"`
	PasswordHash string    `db:"password_hash"`
	Name         string    `db:"name"`
	Address      string    `db:"address"`
	CreatedAt    time.Time `db:"created_at"`
	UpdatedAt    time.Time `db:"updated_at"`
}
